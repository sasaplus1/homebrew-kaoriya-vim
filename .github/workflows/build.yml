name: build

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    name: build bottle
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # NOTE: clean install Homebrew, It fixes /usr permissions.
      - run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      - run: brew tap sasaplus1/kaoriya-vim
      - run: brew install --build-bottle --debug --verbose kaoriya-vim
      - run: brew bottle --debug --verbose kaoriya-vim
      - id: bottle
        run: echo "::set-output name=name::$(ls -1 kaoriya-vim--*.bottle.tar.gz)"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.bottle.outputs.name }}
          path: ${{ steps.bottle.outputs.name }}
  release:
    name: release bottles
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - run: mkdir -p bottles
      - run: find artifacts -type f -print0 | xargs -0 mv -t bottles
      - run: shasum -a 256 -b bottles/* | tee bottles/sha256sum.txt
      # output filename,filesize
      - run: stat -c '%n,%s' ./bottles/* > files.txt
      # output mimetype
      - run: file -b --mime-type ./bottles/* > mime-types.txt
      # output filename,filesize,mimetype
      - run: paste -d , files.txt mime-types.txt > ./bottles.txt
      - id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/github-script@v2
        with:
          script: |
            const fs = require('fs');
            const data = fs.readFileSync('./bottles.txt', 'utf8');
            const files = data.split('\n');

            return Promise.all(
              files.map(function(file) {
                const [name, size, type] = file.split(',');

                return github.repos.uploadReleaseAsset({
                  url: '${{ steps.create_release.outputs.upload_url }}',
                  headers: {
                    'content-length': size,
                    'content-type': type 
                  },
                  name: name,
                  file: fs.readFileSync(name)
                });
              })
            );
